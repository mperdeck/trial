// This directive installs packages from NuGet and it what yuo would normally use
// NOTE: If running the example against a downloaded version of Wyam, uncomment this line and comment the next line
// #n -p Wyam.Yaml
// #n -p Wyam.Markdown
// #n -p Wyam.Razor

// This directive loads modules directly from the local build and is used for testing
// NOTE: If running the example against modules built from source, call wyam.exe from the Wyam.Examples.Tests/bin/Debug folder 
#a **/*

Settings.Host = "www.example.com";

Pipelines.Add("Posts",
	ReadFiles("posts/*.md"),  // Read all markdown files in the "posts" directory
	FrontMatter(Yaml()),  // Load any frontmatter and parse it as YAML markup
	Markdown(),  // Render the markdown content
	Meta("Post", @doc.Content),  // Move the markdown content to metadata
	Merge(ReadFiles("posts/post.cshtml")),  // Load the Razor post page template
	Razor(),  // Compile and render the page template
	Meta("PostFile", string.Format(@"posts/{0}.html", ((string)@doc["Title"]).ToLower().Replace(' ', '-'))),  // Use the post title as the filename and save it in metadata so we can use it in links later
	WriteFiles((string)@doc["PostFile"]),  // Write the post file 
	Meta("SitemapItem", (string)@doc["PostFile"]) // add the relative url of the post
);

Pipelines.Add("Home",
	ReadFiles("{!_,}*.cshtml"),
	Razor(),
	WriteFiles(".html"),
	// add all sites to the sitemap, except the about page
	If(@doc.String("DestinationFileBase") != "about",
		Meta("SitemapItem", new SitemapItem(@doc.String("RelativeFilePath")){
			LastModUtc = DateTime.UtcNow,
			ChangeFrequency = ChangeFrequency.Weekly,
			Priority = 0.1
		})
	)
);

Pipelines.Add("BuildSitemap",
	// sitemaps require absolute urls
	// in the above case, we are using relative urls, but you can also add absolute locations for SitemapItems
	// it will be checked whether an location is absolute or not
	// if it is relative, the above specified "Hostname" metadata is used to generate absolute urls
	Documents(@ctx.Documents),
	Sitemap(),
    WriteFiles((d, c) => "sitemap.xml")
);

Pipelines.Add("BuildSitemap2",
	Documents("Posts"), // we only use the documents of the "Posts"-pipeline for sitemap generation
	Sitemap(),
    WriteFiles((d, c) => "sitemap2.xml")
);

Pipelines.Add("BuildSitemap3",
	// we format all the added relative urls (when using the formatter, any "Hostname" meta data is ignored)
	Documents(@ctx.Documents),
	Sitemap(urlLocation => "http://www.example.org/" + urlLocation ),
    WriteFiles((d, c) => "sitemap3.xml")
);

// the generated sitemap is "minified" for better performance
// you can "beautify" and also validate the generated sitemap here: http://tools.seochat.com/tools/site-validator/